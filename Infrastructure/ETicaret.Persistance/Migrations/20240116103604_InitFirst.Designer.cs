// <auto-generated />
using System;
using ETicaret.Persistance.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETicaret.Persistance.Migrations
{
    [DbContext(typeof(TicaretContext))]
    [Migration("20240116103604_InitFirst")]
    partial class InitFirst
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("ETicaret.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Jewelery",
                            CreatedTime = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "Jewelery & Beauty",
                            CreatedTime = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = true
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Shoes & Automotive",
                            CreatedTime = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            BrandName = "Jewelery & Baby",
                            CreatedTime = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("ETicaret.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Elektronik",
                            CreatedTime = new DateTime(2024, 1, 16, 13, 36, 3, 499, DateTimeKind.Local).AddTicks(9798),
                            IsDeleted = false,
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Ev, Yaşam",
                            CreatedTime = new DateTime(2024, 1, 16, 13, 36, 3, 499, DateTimeKind.Local).AddTicks(9802),
                            IsDeleted = false,
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Bilgisayar",
                            CreatedTime = new DateTime(2024, 1, 16, 13, 36, 3, 499, DateTimeKind.Local).AddTicks(9805),
                            IsDeleted = false,
                            ParentId = 1,
                            Priority = 1
                        });
                });

            modelBuilder.Entity("ETicaret.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProductDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedTime = new DateTime(2024, 1, 16, 13, 36, 3, 504, DateTimeKind.Local).AddTicks(6291),
                            IsDeleted = false,
                            ProductDesc = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ProductDiscount = 7.287012184123090m,
                            ProductName = "Licensed Wooden Keyboard",
                            ProductPrice = 283.34m
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            CreatedTime = new DateTime(2024, 1, 16, 13, 36, 3, 504, DateTimeKind.Local).AddTicks(6617),
                            IsDeleted = false,
                            ProductDesc = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            ProductDiscount = 3.063177130208790m,
                            ProductName = "Licensed Soft Shirt",
                            ProductPrice = 1365.03m
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CreatedTime = new DateTime(2024, 1, 16, 13, 36, 3, 504, DateTimeKind.Local).AddTicks(6556),
                            IsDeleted = false,
                            ProductDesc = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            ProductDiscount = 9.916602247358470m,
                            ProductName = "Practical Frozen Keyboard",
                            ProductPrice = 1277.00m
                        });
                });

            modelBuilder.Entity("ETicaret.Domain.Entities.ProductDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedTime = new DateTime(2024, 1, 16, 13, 36, 3, 510, DateTimeKind.Local).AddTicks(7715),
                            DetailDesc = "Repellat provident quas iure commodi mollitia.",
                            DetailTitle = "Voluptas debitis quis quibusdam ipsam quasi recusandae suscipit minima non.",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedTime = new DateTime(2024, 1, 16, 13, 36, 3, 510, DateTimeKind.Local).AddTicks(7954),
                            DetailDesc = "Sapiente eum quae pariatur nihil voluptates.",
                            DetailTitle = "Mollitia in sint et.",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedTime = new DateTime(2024, 1, 16, 13, 36, 3, 510, DateTimeKind.Local).AddTicks(8073),
                            DetailDesc = "Eum aut reprehenderit eaque repudiandae occaecati.",
                            DetailTitle = "Sint magni pariatur eligendi explicabo ut ducimus.",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("ETicaret.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ETicaret.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ETicaret.Domain.Entities.Product", b =>
                {
                    b.HasOne("ETicaret.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("ETicaret.Domain.Entities.ProductDetail", b =>
                {
                    b.HasOne("ETicaret.Domain.Entities.Category", "Category")
                        .WithMany("ProductDetails")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ETicaret.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
